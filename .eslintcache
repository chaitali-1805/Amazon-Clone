[{"E:\\amazon-clone\\src\\index.js":"1","E:\\amazon-clone\\src\\App.js":"2","E:\\amazon-clone\\src\\reportWebVitals.js":"3","E:\\amazon-clone\\src\\Header.js":"4","E:\\amazon-clone\\src\\Home.js":"5","E:\\amazon-clone\\src\\Product.js":"6","E:\\amazon-clone\\src\\Checkout.js":"7","E:\\amazon-clone\\src\\Subtotal.js":"8","E:\\amazon-clone\\src\\StateProvider.js":"9","E:\\amazon-clone\\src\\reducer.js":"10","E:\\amazon-clone\\src\\CheckoutProduct.js":"11","E:\\amazon-clone\\src\\Login.js":"12","E:\\amazon-clone\\src\\firebase.js":"13","E:\\amazon-clone\\src\\Payment.js":"14","E:\\amazon-clone\\src\\axios.js":"15"},{"size":691,"mtime":1607096200356,"results":"16","hashOfConfig":"17"},{"size":1641,"mtime":1608502327555,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":2561,"mtime":1608487923096,"results":"20","hashOfConfig":"17"},{"size":2907,"mtime":1607027361488,"results":"21","hashOfConfig":"17"},{"size":1277,"mtime":1607207523154,"results":"22","hashOfConfig":"17"},{"size":1436,"mtime":1607208579631,"results":"23","hashOfConfig":"17"},{"size":1245,"mtime":1608488364865,"results":"24","hashOfConfig":"17"},{"size":464,"mtime":1607092852587,"results":"25","hashOfConfig":"17"},{"size":1207,"mtime":1607207435414,"results":"26","hashOfConfig":"17"},{"size":1229,"mtime":1607119569031,"results":"27","hashOfConfig":"17"},{"size":2120,"mtime":1607205781146,"results":"28","hashOfConfig":"17"},{"size":660,"mtime":1607204815382,"results":"29","hashOfConfig":"17"},{"size":5451,"mtime":1608558809767,"results":"30","hashOfConfig":"17"},{"size":137,"mtime":1608504925707,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"16d584k",{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"34"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"E:\\amazon-clone\\src\\index.js",[],["71","72"],"E:\\amazon-clone\\src\\App.js",["73","74"],"import React, { useEffect } from \"react\";\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from \"./Checkout\";\nimport Login from \"./Login\";\nimport { auth } from './firebase';\nimport { useStateValue } from \"./StateProvider\";\nimport Payment from './Payment';\nimport { Elements } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\n\nconst promise = loadStripe('pk_test_51I0ZukBacOkbaJJMCyIHAMiS9XL9dPIuePOxcnI2AP4fpdu1xucS2fCz2wNBcqfr849jKK53PUT7FcSZS0rf74aQ00TkpOlcBf');\n\nfunction App() {\n\n  const [{ }, dispatch] = useStateValue();\n\n  useEffect(() => {\n\n    auth.onAuthStateChanged(authUser => {\n      console.log('The user is >>', authUser);\n\n      if (authUser) {\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        })\n      } else {\n\n        // The user is logged out \n        dispatch({\n          type: 'SET_USER',\n          user: null\n        })\n      }\n    })\n  }, [])\n\n  return (\n    //BEM\n    <Router>\n      <div className=\"app\">\n\n        <Switch>\n          <Route path=\"/login\">\n\n            <Login />\n          </Route>\n\n\n          <Route path=\"/checkout\">\n            <Header />\n            <Checkout />\n          </Route>\n\n          <Route path=\"/payment\">\n            <Header />\n            <Elements stripe={promise} >\n              <Payment />\n            </Elements>\n          </Route>\n\n\n          <Route path=\"/\">\n            <Header />\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","E:\\amazon-clone\\src\\reportWebVitals.js",[],"E:\\amazon-clone\\src\\Header.js",["75","76"],"import React from \"react\";\r\nimport \"./Header.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport ShoppingBasketIcon from \"@material-ui/icons/ShoppingBasket\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { auth } from \"./firebase\";\r\n\r\nfunction Header() {\r\n\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n\r\n    const handleAuthentication = () => {\r\n        if (user) {\r\n            auth.signOut();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <Link to=\"/\">\r\n                <img className=\"header__logo\" src=\"https://pngimg.com/uploads/amazon/amazon_PNG11.png\"\r\n                />\r\n            </Link>\r\n\r\n            <div className=\"header__search\">\r\n                <input\r\n                    className=\"header__searchInput\"\r\n                    type=\"text\" />\r\n\r\n                <SearchIcon className=\"header__searchIcon\" />\r\n            </div>\r\n            <div className=\"header__nav\">\r\n                <Link to={!user && '/login'}>\r\n                    <div onClick={handleAuthentication} className=\"header__option\">\r\n                        <span className=\"header__optionLineOne\">\r\n                            Hello, {!user ? 'Guest' : user.email} </span>\r\n                        <span className=\"header__optionLineTwo\">\r\n                            {user ? 'Sign Out' : 'Sign In'} </span>\r\n                    </div>\r\n                </Link>\r\n                <div className=\"header__option\">\r\n                    <span className=\"header__optionLineOne\">\r\n                        Returns\r\n                    </span>\r\n                    <span className=\"header__optionLineTwo\">\r\n                        & Orders\r\n                    </span>\r\n\r\n\r\n                </div>\r\n\r\n                <div className=\"header__option\">\r\n                    <span className=\"header__optionLineOne\">\r\n                        Your\r\n                    </span>\r\n                    <span className=\"header__optionLineTwo\">\r\n                        Prime\r\n                    </span>\r\n                </div>\r\n\r\n                <Link to=\"/checkout\">\r\n                    <div className=\"header__optionBasket\">\r\n                        <ShoppingBasketIcon />\r\n                        <span className=\"header__optionLineTwo header__basketCount\">\r\n                            {basket?.length}\r\n                        </span>\r\n                    </div>\r\n                </Link>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header\r\n","E:\\amazon-clone\\src\\Home.js",[],"E:\\amazon-clone\\src\\Product.js",["77"],"import React from \"react\";\r\nimport \"./Product.css\";\r\nimport { useStateValue } from \"./StateProvider\";\r\n\r\nfunction Product({ id, title, image, price, rating }) {\r\n\r\n    const [{ basket }, dispatch] = useStateValue();\r\n\r\n    // console.log('This is the basket', basket);\r\n    const addToBasket = () => {\r\n        // Dispach the item into the data layer\r\n        dispatch({\r\n            type: 'ADD_TO_BASKET',\r\n            item: {\r\n                id: id,\r\n                title: title,\r\n                image: image,\r\n                price: price,\r\n                rating: rating,\r\n            },\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"product\">\r\n            <div className=\"product__info\">\r\n                <p>{title}</p>\r\n                <p className=\"product__price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"product__rating\">\r\n                    {Array(rating).fill().map((_, i) => (\r\n                        <p>‚≠ê</p>\r\n                    ))}\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <img src={image} alt=\"\" />\r\n            <button onClick={addToBasket}>Add to Basket</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Product\r\n","E:\\amazon-clone\\src\\Checkout.js",["78"],"import React from 'react';\r\nimport \"./Checkout.css\";\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport { useStateValue } from './StateProvider';\r\nimport Subtotal from './Subtotal';\r\n\r\nfunction Checkout() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    return (\r\n        <div className=\"checkout\">\r\n            <div className=\"checkout__left\">\r\n                <img className=\"checkout__ad\" src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\" alt=\"\" />\r\n\r\n                {/* <img className=\"checkout__ad\" src=\"https://images-na.ssl-images-amazon.com/images/G/01/gift-certificates/consumer/2020/Holiday/GCLPBanners/holi_d_slideshow_GCLP_EN_1024x180_20200918.jpg\" alt=\"\" /> */}\r\n\r\n                <div>\r\n                    <h3>Hello, {user?.email} </h3>\r\n                    <h2 className=\"checkout__titile\">\r\n                        Your shopping Basket\r\n                    </h2>\r\n                    {basket.map(item => (<CheckoutProduct\r\n                        id={item.id}\r\n                        title={item.title}\r\n                        image={item.image}\r\n                        price={item.price}\r\n                        rating={item.rating} />))}\r\n\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"checkout__right\">\r\n                <Subtotal />\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","E:\\amazon-clone\\src\\Subtotal.js",["79"],"import React from 'react';\r\nimport \"./Subtotal.css\";\r\nimport CurrencyFormat from \"react-currency-format\";\r\nimport { useStateValue } from './StateProvider';\r\nimport { getBasketTotal } from './reducer';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nfunction Subtotal() {\r\n    const history = useHistory();\r\n    const [{ basket }, dispatch] = useStateValue();\r\n\r\n    return (\r\n        <div className=\"subtotal\">\r\n            <CurrencyFormat renderText={(value) => (\r\n                <>\r\n                    <p>\r\n                        {/* Part of hw */}\r\n                        Subtotal ({basket?.length} items):\r\n                    <strong> {value} </strong>\r\n                    </p>\r\n                    <small className=\"subtotal__gift\">\r\n                        <input type=\"checkbox\" />This order contains a gift\r\n                </small>\r\n                </>\r\n            )}\r\n                decimalScale={2}\r\n                value={getBasketTotal(basket)}\r\n                displayType={\"text\"}\r\n                thousandSeparator={true}\r\n                prefix={\"$\"}\r\n            />\r\n\r\n            <button onClick={e => history.push('/payment')}>Proceed to Checkout</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Subtotal;\r\n","E:\\amazon-clone\\src\\StateProvider.js",[],"E:\\amazon-clone\\src\\reducer.js",[],"E:\\amazon-clone\\src\\CheckoutProduct.js",["80"],"import React from 'react';\r\nimport './CheckoutProduct.css';\r\nimport { useStateValue } from './StateProvider';\r\n\r\nfunction CheckoutProduct({ id, image, title, price, rating }) {\r\n\r\n    const [{ basket }, dispatch] = useStateValue();\r\n    const removeFromBasket = () => {\r\n        // remove the item from basket\r\n        dispatch({\r\n            type: 'REMOVE_FROM_BASKET',\r\n            id: id,\r\n\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"checkoutProduct\">\r\n            <img className=\"checkoutProduct__image\" src={image} alt=\"\" />\r\n\r\n            <div className=\"checkoutProduct__info\">\r\n                <p className=\"checkoutProduct__title\">\r\n                    {title}\r\n                </p>\r\n                <p className=\"checkoutProduct__price\">\r\n                    <small>$</small>\r\n                    <strong>{price}</strong>\r\n                </p>\r\n                <div className=\"product__rating\">\r\n                    {Array(rating).fill().map((_, i) => (\r\n                        <p>‚≠ê</p>\r\n                    ))}\r\n\r\n\r\n                </div>\r\n                <button onClick={removeFromBasket}>Remove from Basket</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CheckoutProduct\r\n",["81","82"],"E:\\amazon-clone\\src\\Login.js",[],"E:\\amazon-clone\\src\\firebase.js",[],"E:\\amazon-clone\\src\\Payment.js",["83","84","85"],"import { Link, useHistory } from 'react-router-dom';\r\nimport React, { useState, useEffect } from 'react';\r\nimport CheckoutProduct from './CheckoutProduct';\r\nimport './Payment.css';\r\nimport { useStateValue } from './StateProvider';\r\nimport { CardElement, useElements, useStripe } from '@stripe/react-stripe-js';\r\nimport CurrencyFormat from 'react-currency-format';\r\nimport { getBasketTotal } from './reducer';\r\nimport axios from './axios';\r\n\r\n\r\nfunction Payment() {\r\n    const [{ basket, user }, dispatch] = useStateValue();\r\n    const history = useHistory();\r\n\r\n    const stripe = useStripe();\r\n    const elements = useElements;\r\n\r\n\r\n\r\n    const [succedded, setSuccedded] = useState(false);\r\n    const [processing, setProcessing] = useState(\"\");\r\n    const [error, setError] = useState(null)\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [clientSecret, setClientSecret] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // generate the special stripe secret which allows us to charge a customer\r\n        const getClientSecret = async () => {\r\n            const reponse = await axios({\r\n                method: 'post',\r\n                // Stripe expects the total in a currencies subunits \r\n                url: `/paymentss/create?total=${getBasketTotal(basket) * 100}`\r\n            });\r\n\r\n            setClientSecret(Response.data.clientSecret)\r\n\r\n        }\r\n        getClientSecret();\r\n    }, [basket])\r\n\r\n    const handleSubmit = async (event) => {\r\n        // do all the fancy stripe stuff\r\n        event.preventDefault();\r\n        setProcessing(true);\r\n\r\n        const payload = await stripe.confirmCardPayment(clientSecret, {\r\n            payment_method: {\r\n                card: elements.getElement(CardElement)\r\n            }\r\n        }).then(({ paymentIntent }) => {\r\n            // paymentIntent = payment Confirmation\r\n            setSuccedded(true);\r\n            setError(null);\r\n            setProcessing(false);\r\n\r\n            history.replace('orders')\r\n        })\r\n\r\n    }\r\n\r\n    const handleChange = event => {\r\n        // Listen for changes in the CardElement\r\n        // and display any errors as the customer types their card details\r\n        setDisabled(event.empty);\r\n        setError(event.error ? event.error.message : \"\");\r\n    }\r\n\r\n    return (\r\n        <div className='payment'>\r\n            <div className='payment__container'>\r\n                <h1>\r\n                    Checkout (\r\n                        <Link to='/checkout'>{basket?.length} items</Link>\r\n                        )\r\n                </h1>\r\n\r\n                {/* Payment section - delivery address */}\r\n                <div className='payment__section'>\r\n                    <div className='payment__title'>\r\n                        <h3>Delivery Address</h3>\r\n                    </div>\r\n                    <div className='payment__address'>\r\n                        <p>{user?.email}</p>\r\n                        <p>123 React Lang</p>\r\n                        <p>Los Angels, CA</p>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Payment section - Review  items*/}\r\n                <div className='payment__section'>\r\n                    <div className='payment__title'>\r\n                        <h3>Review items and delivery</h3>\r\n                    </div>\r\n                    <div className='payment__items'>\r\n                        {basket.map(item => (\r\n                            <CheckoutProduct\r\n                                id={item.id}\r\n                                title={item.title}\r\n                                image={item.image}\r\n                                price={item.price}\r\n                                rating={item.rating}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* Payment section - Payment method */}\r\n                <div className='payment__section'>\r\n                    <h3>Payment Method</h3>\r\n                    <div className='payment__details'>\r\n                        {/* Stripe magic will go */}\r\n                        <form onSubmit={handleSubmit}>\r\n                            <CardElement onChange={handleChange} />\r\n                            <div className='payment__priceContainer'>\r\n                                <CurrencyFormat\r\n                                    renderText={(value) => (\r\n                                        <>\r\n                                            <h3>Order Total: {value}</h3>\r\n                                        </>\r\n                                    )}\r\n                                    decimalScale={2}\r\n                                    value={getBasketTotal(basket)}\r\n                                    displayType={\"text\"}\r\n                                    thousandSepartor={true}\r\n                                    prefix={\"$\"}\r\n                                />\r\n\r\n                                <button disabled={processing || disabled || succedded}>\r\n                                    <span>{processing ? <p> Processing</p> : \"Buy Now\"} </span>\r\n                                </button>\r\n                            </div>\r\n\r\n                            {/* Error */}\r\n                            {error && <div>{error}</div>}\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n","E:\\amazon-clone\\src\\axios.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":18,"column":10,"nodeType":"92","messageId":"93","endLine":18,"endColumn":13},{"ruleId":"94","severity":1,"message":"95","line":39,"column":6,"nodeType":"96","endLine":39,"endColumn":8,"suggestions":"97"},{"ruleId":"98","severity":1,"message":"99","line":11,"column":30,"nodeType":"100","messageId":"101","endLine":11,"endColumn":38},{"ruleId":"102","severity":1,"message":"103","line":22,"column":17,"nodeType":"104","endLine":23,"endColumn":19},{"ruleId":"98","severity":1,"message":"105","line":7,"column":14,"nodeType":"100","messageId":"101","endLine":7,"endColumn":20},{"ruleId":"98","severity":1,"message":"99","line":8,"column":30,"nodeType":"100","messageId":"101","endLine":8,"endColumn":38},{"ruleId":"98","severity":1,"message":"99","line":11,"column":24,"nodeType":"100","messageId":"101","endLine":11,"endColumn":32},{"ruleId":"98","severity":1,"message":"105","line":7,"column":14,"nodeType":"100","messageId":"101","endLine":7,"endColumn":20},{"ruleId":"86","replacedBy":"106"},{"ruleId":"88","replacedBy":"107"},{"ruleId":"98","severity":1,"message":"99","line":13,"column":30,"nodeType":"100","messageId":"101","endLine":13,"endColumn":38},{"ruleId":"98","severity":1,"message":"108","line":30,"column":19,"nodeType":"100","messageId":"101","endLine":30,"endColumn":26},{"ruleId":"98","severity":1,"message":"109","line":47,"column":15,"nodeType":"100","messageId":"101","endLine":47,"endColumn":22},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["112"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'basket' is assigned a value but never used.",["110"],["111"],"'reponse' is assigned a value but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"113","fix":"114"},"Update the dependencies array to be: [dispatch]",{"range":"115","text":"116"},[1045,1047],"[dispatch]"]